---
format:
   html:
     self-contained: true
editor: visual
params:
  class: "DGP_5_1_1_FALSE"
---

```{r, warning=FALSE, echo=FALSE}
library(glue)
library(purrr)
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
```

```{r, echo=FALSE}
read_zip <- function(tar) {
  files <- unzip(tar, list = TRUE)$Name
  map(files, function(file) {
    con <- unz(tar, file)
    read.csv(con)
  })
}

read_zipped_dgp <- function(dir_name, id) {
  tar <- file.path("../data/dgps", dir_name, paste0(dir_name, ".zip"))
  file <- unzip(tar, list = TRUE)$Name[id]
  tryCatch({
    con = gzcon(unz(tar, file))
    readRDS(con)
  }, finally = {
    close(con)
  })
}
```

```{r, message=FALSE, echo=FALSE}
dgps <- map_dfr(1:250, function(id) {
  meta <- read_zipped_dgp(params$class, id)
  data.frame(
    id = id,
    truth = meta$truth, 
    bias = meta$bias,
    eta = meta$eta, 
    rho = meta$rho
  )
})

res <-
  glue("../data/sims/sim_{params$class}.zip") |> 
  read_zip()|> 
  bind_rows() |> 
  left_join(dgps)

bias <- 
  group_by(res, id, n) |> 
  summarise(
    across(c("cbps", "gcomp", "bart", "cvtmle"), 
           \(x) mean(x - truth))
    )

mse <- 
  group_by(res, id, n) |> 
  summarise(
    across(c("cbps", "gcomp", "bart", "cvtmle"), 
           \(x) mean((x - truth)^2))
    )

meta <- strsplit(params$class, "_")
```

```{r, echo=FALSE}
ggecdf <- function(data) {
  ggplot(data) +
    geom_line(aes(x = abs(cbps), y = 1 - ..y.., color = "blue"), stat = 'ecdf') +
    geom_line(aes(x = abs(gcomp), y = 1 - ..y.., color = "red"), stat = 'ecdf') + 
    geom_line(aes(x = abs(bart), y = 1 - ..y.., color = "green"), stat = 'ecdf') + 
    geom_line(aes(x = abs(cvtmle), y = 1 - ..y.., color = "orange"), stat = 'ecdf') + 
    scale_color_identity(
      breaks = c("blue", "red", "green", "orange"),
      labels = c("CBPS", "G-comp.", "BART", "TMLE"),
      guide = "legend"
    )
}
```

DGP class:

-   Binary covariates: `r meta[[1]][2]`

-   Numeric covariates: `r meta[[1]][3]`

-   Interaction order: `r meta[[1]][4]`

-   Heterogeneous treatment effects: `r meta[[1]][5]`

```{r}
#| column: screen-inset-shaded
#| layout-nrow: 1
#| fig-cap: CDFs of the absoluate bias
#| fig-subcap:
#|   - "N = 100"
#|   - "N = 500" 
#|   - "N = 1000"

ggecdf(filter(bias, n == 100)) + 
  labs(x = "|Bias|", 
       y = "P[X>x]", 
       colour = "Estimator") 

ggecdf(filter(bias, n == 500)) + 
  labs(x = "|Bias|", 
       y = "P[X>x]", 
       colour = "Estimator") 

ggecdf(filter(bias, n == 1000)) + 
  labs(x = "|Bias|", 
       y = "P[X>x]", 
       colour = "Estimator") 
```

```{r}
#| column: screen-inset-shaded
#| layout-nrow: 1
#| fig-cap: CDFs of the MSE
#| fig-subcap:
#|   - "N = 100"
#|   - "N = 500" 
#|   - "N = 1000"

ggecdf(filter(mse, n == 100)) + 
  labs(x = "MSE", 
       y = "P[X>x]", 
       colour = "Estimator") 

ggecdf(filter(mse, n == 500)) + 
  labs(x = "MSE", 
       y = "P[X>x]", 
       colour = "Estimator") 

ggecdf(filter(mse, n == 1000)) + 
  labs(x = "MSE", 
       y = "P[X>x]", 
       colour = "Estimator") 
```
